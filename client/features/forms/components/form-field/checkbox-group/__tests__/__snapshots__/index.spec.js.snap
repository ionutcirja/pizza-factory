// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxGroupField component render should render a list of checkboxes 1`] = `
<FieldSet>
  <Label
    as="legend"
    colour="grey"
  />
  <div
    key="1"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      id="option.0"
      name="option.0"
      onChange={[Function]}
      type="checkbox"
      value={1}
    />
    <Label
      colour="grey"
      htmlFor="option.0"
    >
      1
    </Label>
  </div>
  <div
    key="2"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      id="option.1"
      name="option.1"
      onChange={[Function]}
      type="checkbox"
      value={2}
    />
    <Label
      colour="grey"
      htmlFor="option.1"
    >
      2
    </Label>
  </div>
  <div
    key="3"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      id="option.2"
      name="option.2"
      onChange={[Function]}
      type="checkbox"
      value={3}
    />
    <Label
      colour="grey"
      htmlFor="option.2"
    >
      3
    </Label>
  </div>
  <div
    key="4"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      id="option.3"
      name="option.3"
      onChange={[Function]}
      type="checkbox"
      value={4}
    />
    <Label
      colour="grey"
      htmlFor="option.3"
    >
      4
    </Label>
  </div>
</FieldSet>
`;

exports[`CheckboxGroupField component render should render an error if field is touched and there is an error defined for the current field 1`] = `
<FieldSet>
  <Label
    as="legend"
    colour="grey"
  />
  <div
    key="1"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      error="some error"
      id="option.0"
      name="option.0"
      onChange={[Function]}
      type="checkbox"
      value={1}
    />
    <Label
      colour="grey"
      htmlFor="option.0"
    >
      1
    </Label>
  </div>
  <div
    key="2"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      error="some error"
      id="option.1"
      name="option.1"
      onChange={[Function]}
      type="checkbox"
      value={2}
    />
    <Label
      colour="grey"
      htmlFor="option.1"
    >
      2
    </Label>
  </div>
  <div
    key="3"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      error="some error"
      id="option.2"
      name="option.2"
      onChange={[Function]}
      type="checkbox"
      value={3}
    />
    <Label
      colour="grey"
      htmlFor="option.2"
    >
      3
    </Label>
  </div>
  <div
    key="4"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      error="some error"
      id="option.3"
      name="option.3"
      onChange={[Function]}
      type="checkbox"
      value={4}
    />
    <Label
      colour="grey"
      htmlFor="option.3"
    >
      4
    </Label>
  </div>
  <Error
    colour="red"
  >
    some error
  </Error>
</FieldSet>
`;

exports[`CheckboxGroupField component render should render check checkboxes if their values are already in the field values list 1`] = `
<FieldSet>
  <Label
    as="legend"
    colour="grey"
  />
  <div
    key="1"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={true}
      disabled={false}
      id="option.0"
      name="option.0"
      onChange={[Function]}
      type="checkbox"
      value={1}
    />
    <Label
      colour="grey"
      htmlFor="option.0"
    >
      1
    </Label>
  </div>
  <div
    key="2"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={true}
      disabled={false}
      id="option.1"
      name="option.1"
      onChange={[Function]}
      type="checkbox"
      value={2}
    />
    <Label
      colour="grey"
      htmlFor="option.1"
    >
      2
    </Label>
  </div>
  <div
    key="3"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      id="option.2"
      name="option.2"
      onChange={[Function]}
      type="checkbox"
      value={3}
    />
    <Label
      colour="grey"
      htmlFor="option.2"
    >
      3
    </Label>
  </div>
  <div
    key="4"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={false}
      id="option.3"
      name="option.3"
      onChange={[Function]}
      type="checkbox"
      value={4}
    />
    <Label
      colour="grey"
      htmlFor="option.3"
    >
      4
    </Label>
  </div>
</FieldSet>
`;

exports[`CheckboxGroupField component render should render some disabled checkboxes if their values are not in the field values list and the maximum allowed checked checkboxes number is already met 1`] = `
<FieldSet>
  <Label
    as="legend"
    colour="grey"
  />
  <div
    key="1"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={true}
      disabled={false}
      id="option.0"
      name="option.0"
      onChange={[Function]}
      type="checkbox"
      value={1}
    />
    <Label
      colour="grey"
      htmlFor="option.0"
    >
      1
    </Label>
  </div>
  <div
    key="2"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={true}
      disabled={false}
      id="option.1"
      name="option.1"
      onChange={[Function]}
      type="checkbox"
      value={2}
    />
    <Label
      colour="grey"
      htmlFor="option.1"
    >
      2
    </Label>
  </div>
  <div
    key="3"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={true}
      disabled={false}
      id="option.2"
      name="option.2"
      onChange={[Function]}
      type="checkbox"
      value={3}
    />
    <Label
      colour="grey"
      htmlFor="option.2"
    >
      3
    </Label>
  </div>
  <div
    key="4"
  >
    <Checkbox
      borderColour="grey"
      borderErrorColour="red"
      checkColour="blue"
      checked={false}
      disabled={true}
      id="option.3"
      name="option.3"
      onChange={[Function]}
      type="checkbox"
      value={4}
    />
    <Label
      colour="grey"
      htmlFor="option.3"
    >
      4
    </Label>
  </div>
</FieldSet>
`;
